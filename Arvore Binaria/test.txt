Node *rotacaoDireita (Node *raiz) {

}

int array[] = {10, 5, 20, 3, 7, 15, 30};
    int n = sizeof(array) / sizeof(array[0]);

    Node *root1 = NULL;
    Node *root2 = NULL;

    for (int i = 0; i < n; i++) {
        root1 = inserir(root1, array[i]);
        root2 = inserir(root2, array[i]);
        printf("Inserido: %d\n", array[i]);
    }

    printf("Pre-Order Traversal: ");
    preOrder(root1);
    printf("\n");

    printf("%d\n", contarFolhas(root1));
    
    Node *busca = buscar(root1, 12);
    if (busca != NULL) {
        printf("Valor %d encontrado na arvore\n", busca->valor);

    } else {
        printf("Valor nao encontrado na arvore\n");
    }

    if (saoIguais(root1, root2)) {
        printf("Sao iguais\n");

    } else {
        printf("Sao diferentes\n");
    }

    printf("\nAltura da arvore: %d", alturaArvore(root1));